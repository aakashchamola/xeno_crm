services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: xeno_crm
    ports:
      - "3306:3306"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  api-gateway:
    build: ./backend/api-gateway
    env_file:
      - .env
    restart: always
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - "8002:8002"

  ingestion-consumer:
    build: ./backend/ingestion-consumer
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - mysql
    restart: on-failure

  delivery-consumer:
    build: ./backend/delivery-consumer
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - mysql
      - vendor-simulator
    restart: on-failure

  vendor-simulator:
    build: ./backend/vendor-simulator
    env_file:
      - .env
    ports:
      - "8005:8005"
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  auth-service:
    build: ./backend/auth-service
    env_file:
      - .env
    ports:
      - "8003:8003"

  ai-service:
    build: ./ai-service
    env_file:
      - .env
    ports:
      - "8004:8004"

  frontend:
    build: ./frontend
    env_file:
      - .env
    ports:
      - "8001:3000"
    volumes:
      - ./frontend:/app
    command: npm run dev
    depends_on:
      - api-gateway
      - ai-service
      - auth-service